name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Backend Testing
  backend-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    - name: Restore dependencies
      run: |
        cd src/StockRecommender.API
        dotnet restore
    
    - name: Build
      run: |
        cd src/StockRecommender.API
        dotnet build --no-restore
    
    - name: Test
      run: |
        cd src/StockRecommender.API
        dotnet test --no-build --verbosity normal

  # Frontend Testing
  frontend-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: ui/package-lock.json
    
    - name: Install dependencies
      run: |
        cd ui
        npm ci
    
    - name: Lint
      run: |
        cd ui
        npm run lint
    
    - name: Build
      run: |
        cd ui
        npm run build
    
    - name: Test
      run: |
        cd ui
        npm run test -- --watch=false --browsers=ChromeHeadless

  # Docker Build Test
  docker-test:
    runs-on: ubuntu-latest
    needs: [backend-test, frontend-test]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build API image
      run: |
        docker build -f docker/Dockerfile -t stock-recommender-api .
    
    - name: Build UI image
      run: |
        cd ui
        docker build -t stock-recommender-ui .

  security-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Check for secrets
      run: |
        # Check for common secret patterns
        if grep -r "sk_live\|pk_live\|AKIA\|sk_test\|pk_test" . --exclude-dir=node_modules --exclude-dir=bin --exclude-dir=obj; then
          echo "❌ Potential secrets found in code!"
          exit 1
        fi
        
        # Check for .env files
        if find . -name ".env" -not -path "./.git/*"; then
          echo "❌ .env files found! These should not be committed."
          exit 1
        fi
        
        echo "✅ No secrets found in code" 